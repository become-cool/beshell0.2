const Pin = require("../pin")
const EventEmitter = require("events")

class Switch extends EventEmitter {

    constructor(){
        super()
        this._callback = (val)=>{
            this.emit( "change", val!=this._mode )
            this.emit( (val==this._mode? "off": "on"), val )
        }
        this._inputPin = null
        this._mode = 1
    }

    /**
     * 
     * @param {Pin} pinInput 
     * @param {Pin|'vcc'|'ground'} pinOutput = 'ground'
     */
    begin(pinInput, pinOutput) {

        this.deinit()

        // 转为 Pin 对象
        this._pinInput = pin( pinInput )
        if(pinOutput) {
            try{
                pinOutput = pinOutput && pin(pinOutput)
            }catch(e) {}
        }
        // pinOutput 默认值 ground
        else {
            pinOutput = 'ground'
        }

        this._mode = 1        
        if( pinOutput=='vcc' || pinOutput.gpio==34 || pinOutput.gpio==34 ) {   // 34/36 被固定上拉了
            this._mode = 0
        }

        if(pinOutput instanceof Pin){
            pinOutput
                .setMode("output")
                .write(this._mode? 0: 1)
        }
        
        this._pinInput
                .setMode(this._mode? "input-pullup": "input-pulldown")
                .watch(this._callback, "both")
    }

    deinit() {
        if(this._pinInput) {
            this._pinInput.unwatch(this._callback, "both")
            this._pinInput = null
        }
    }

    isOn() {
        if(!(this._inputPin instanceof Pin))
            return false
        return this._inputPin.read() != this._mode
    }
}


module.exports = Switch